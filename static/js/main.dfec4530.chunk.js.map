{"version":3,"sources":["index.js"],"names":["TodoList","props","state","value","todos","id","title","done","filterTodos","addElement","bind","handleChange","removeElement","changeStatus","doneList","todoList","allList","event","this","setState","target","preventDefault","newTodo","Date","now","prevState","filter","todo","console","log","el","map","buttons","document","getElementsByTagName","i","length","className","item","test","onSubmit","type","onChange","key","onClick","React","Component","ReactDom","render","getElementById"],"mappings":"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","file":"static/js/main.dfec4530.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\n\nclass TodoList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            todos: [\n                {id: 1, title: \"menage\", done: false},\n                {id: 2, title: \"repassage\", done: false}\n            ],\n            filterTodos: null,\n        };\n        this.addElement = this.addElement.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.removeElement = this.removeElement.bind(this);\n        this.changeStatus = this.changeStatus.bind(this);\n        this.doneList = this.doneList.bind(this);\n        this.todoList = this.todoList.bind(this);\n        this.allList = this.allList.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    addElement(event) {\n        event.preventDefault();\n        let newTodo = {\n            id: Date.now(),\n            title: this.state.value,\n            done: false,\n        }\n        this.setState(prevState => ({\n            todos: [...prevState.todos, newTodo],\n            filterTodos: [...prevState.todos, newTodo],\n            value: \"\",\n        }));\n    }\n\n    removeElement(event) {\n        this.setState({\n            todos: this.state.todos.filter(todo => todo.id != event.target.value ),\n        });\n        if (this.state.filterTodos != null) {\n            this.setState({\n                filterTodos : this.state.filterTodos.filter(todo => todo.id != event.target.value),\n            });\n        }\n    }\n\n    changeStatus(event) {\n        console.log(event.target.value)\n        const el = event.target.value;\n        this.setState(prevState => {\n            return {\n                todos: prevState.todos.map(todo => {\n                    if(el == todo.id) {\n                        return {...todo, done: !todo.done};\n                    } else {\n                        return {...todo, done: todo.done};\n                    }\n                }),\n                filterTodos: prevState.todos.map(todo => {\n                    if(el == todo.id) {\n                        return {...todo, done: !todo.done};\n                    } else {\n                        return {...todo, done: todo.done};\n                    }\n                })\n            };\n        });\n    }\n\n    doneList(event) {\n        const buttons = document.getElementsByTagName('button');\n        for (let i = 0; i < buttons.length; i++) {\n            buttons[i].className = 'notActive';\n        }\n        event.target.className = 'isActive';\n        this.setState({\n            filterTodos: this.state.todos.filter(item => item.done != false)\n        });\n    }\n\n    todoList(event) {\n        const buttons = document.getElementsByTagName('button');\n        for (let i = 0; i < buttons.length; i++) {\n            buttons[i].className = 'notActive';\n        }\n        event.target.className = 'isActive';\n        this.setState({\n            filterTodos: this.state.todos.filter(item => item.done == false)\n        });\n    }\n\n    allList(event) {\n        const buttons = document.getElementsByTagName('button');\n        for (let i = 0; i < buttons.length; i++) {\n            buttons[i].className = 'notActive';\n        }\n        event.target.className = 'isActive';\n        this.setState({\n            filterTodos: null\n        })\n    }\n\n    render() {\n        const test = this.state.filterTodos != null ? this.state.filterTodos : this.state.todos;\n        return <div className='appContainer'>\n                <h1 className='appTitle'>React TodoList</h1>\n                <div className='mainContainer'>\n                <form className=\"taskBarContainer\" onSubmit={this.addElement}>\n                    <input className=\"taskBar\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    <input className=\"taskBarButton\" type=\"submit\" />\n                </form>\n                <ul className=\"listContainer\">\n                    {test.map(todo => {\n                        return (\n                            <li \n                                className={todo.done == true ? 'done' : 'todo'}\n                                key={todo.id}>\n                                <input type=\"checkbox\"\n                                value={todo.id}\n                                onChange={this.changeStatus} \n                            />\n                                {todo.title}\n                                <button\n                                className=\"removeButton\" \n                                value={todo.id} \n                                onClick={this.removeElement}\n                                >\n                                    X\n                                </button>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <div className=\"buttonContainer\">\n                    <button className=\"notActive\" onClick={this.doneList}>Done</button>\n                    <button className=\"notActive\" onClick={this.todoList}>Todo</button>\n                    <button className=\"notActive\" onClick={this.allList}>All</button>\n                </div>\n            </div>\n        </div>\n    }\n}\n\n\nReactDom.render(\n    <TodoList />,\n    document.getElementById('root')\n);"],"sourceRoot":""}